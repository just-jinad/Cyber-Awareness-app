generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model module {
  id           Int            @id @default(autoincrement())
  title        String
  content      String         @db.LongText
  createdAt    DateTime       @default(now())
  imageUrl     String?
  userprogress userprogress[]
}

model quiz {
  id            Int      @id @default(autoincrement())
  question      String
  options       String   @db.LongText
  correctAnswer Int
  createdAt     DateTime @default(now())
}

model Simulation {
  id            Int      @id @default(autoincrement())
  title         String
  steps         Json?    // e.g., [{ scenario: "Email from hr-support@company-careers.com", options: ["Click link", "Report"], nextStep: [1, null] }, { scenario: "Fake login page", options: ["Enter credentials", "Close"], outcome: "breach" }]
  createdAt     DateTime @default(now())
}

model user {
  id           Int            @id @default(autoincrement())
  username     String         @unique(map: "User_username_key")
  email        String         @unique(map: "User_email_key")
  password     String
  role         user_role      @default(USER)
  createdAt    DateTime       @default(now())
  userprogress userprogress[]
}

model userprogress {
  id          Int      @id @default(autoincrement())
  userId      Int
  moduleId    Int
  score       Int
  completedAt DateTime @default(now())
  module      module   @relation(fields: [moduleId], references: [id], map: "UserProgress_moduleId_fkey")
  user        user     @relation(fields: [userId], references: [id], map: "UserProgress_userId_fkey")

  @@index([moduleId], map: "UserProgress_moduleId_fkey")
  @@index([userId], map: "UserProgress_userId_fkey")
}

enum user_role {
  USER
  ADMIN
}
